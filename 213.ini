n="$*"

# Проверяем, является ли это встроенной командой
if [[ $(type -t "$n") == "builtin" ]]; then #тип переданной команды, builtin для встроенных команд
    echo "$name является внутренней программой"

# Проверяем, является ли это внешней программой (находится в PATH)
elif [[ $(type -t "$n") == "file" ]]; then #тип переданной команды file => внешняя 
    path_to_command=$(command -v "$n")
    echo "$name является внешней программой с путём: $path_to_command"

# Проверяем, является ли это исполняемым файлом в текущей директории
elif [[ -x "$n" && -f "$n" ]]; then # -x "$name": файл существует и исполняемый -f "$name": это обычный файл 
    path_to_file=$(realpath "$n")
    echo "$name является исполняемым файлом с путём: $path_to_file"

# Ищем файл по всей системе, если его нет в PATH или текущей директории
else
    file_path=$(find / -type f -name "$n" 2>/dev/null | head -n 1) #/  файлы корневого каталога. -type f: ищет только файлы.-name "$name": ищет файл со  значенем переменной name.2>/dev/null: подавляет сообщения об ошибках доступа.head -n 1: берёт первый файл(ускоряет поиск).
    if [[ -n "$file_path" ]]; then
        echo "$name является файлом с путём: $file_path"
    else
        echo "Ошибка: $n не найден"
    fi
fi
